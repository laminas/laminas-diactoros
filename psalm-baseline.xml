<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="5.9.0@8b9ad1eb9e8b7d3101f949291da2b9f7767cd163">
  <file src="src/CallbackStream.php">
    <ImplementedReturnTypeMismatch>
      <code>null|callable</code>
    </ImplementedReturnTypeMismatch>
    <MixedAssignment>
      <code>$contents</code>
    </MixedAssignment>
    <PossiblyUnusedReturnValue>
      <code>int</code>
      <code>int</code>
      <code>string</code>
    </PossiblyUnusedReturnValue>
  </file>
  <file src="src/Exception/DeserializationException.php">
    <PossiblyInvalidArgument>
      <code><![CDATA[$previous->getCode()]]></code>
      <code><![CDATA[$previous->getCode()]]></code>
    </PossiblyInvalidArgument>
  </file>
  <file src="src/Exception/InvalidProxyAddressException.php">
    <PossiblyUnusedMethod>
      <code>forInvalidProxyArgument</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="src/HeaderSecurity.php">
    <UnusedConstructor>
      <code>__construct</code>
    </UnusedConstructor>
  </file>
  <file src="src/MessageTrait.php">
    <DocblockTypeContradiction>
      <code><![CDATA[! is_string($stream) && ! is_resource($stream)]]></code>
    </DocblockTypeContradiction>
    <InvalidArrayOffset>
      <code><![CDATA[$new->headerNames[$normalized]]]></code>
      <code><![CDATA[$this->headerNames[strtolower($header)]]]></code>
      <code><![CDATA[$this->headerNames[strtolower($header)]]]></code>
      <code><![CDATA[$this->headerNames[strtolower($name)]]]></code>
    </InvalidArrayOffset>
    <InvalidPropertyAssignmentValue>
      <code>$headerNames</code>
    </InvalidPropertyAssignmentValue>
    <MixedArgumentTypeCoercion>
      <code>$header</code>
      <code>$header</code>
      <code>$header</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code>$v</code>
      <code>$value</code>
    </MixedAssignment>
    <MixedInferredReturnType>
      <code>bool</code>
    </MixedInferredReturnType>
    <ParamNameMismatch>
      <code>$header</code>
      <code>$header</code>
    </ParamNameMismatch>
    <PropertyTypeCoercion>
      <code>$headers</code>
      <code><![CDATA[$new->headerNames]]></code>
      <code><![CDATA[$new->headers]]></code>
    </PropertyTypeCoercion>
    <UnusedForeachValue>
      <code>$v</code>
    </UnusedForeachValue>
  </file>
  <file src="src/Module.php">
    <UnusedClass>
      <code>Module</code>
    </UnusedClass>
  </file>
  <file src="src/RelativeStream.php">
    <PossiblyNullOperand>
      <code><![CDATA[$this->decoratedStream->getSize()]]></code>
    </PossiblyNullOperand>
  </file>
  <file src="src/Request/ArraySerializer.php">
    <MixedArgument>
      <code>$headers</code>
      <code>$method</code>
      <code>$protocolVersion</code>
      <code>$requestTarget</code>
      <code>$uri</code>
      <code>self::getValueFromKey($serializedRequest, 'body')</code>
    </MixedArgument>
    <MixedAssignment>
      <code>$headers</code>
      <code>$method</code>
      <code>$protocolVersion</code>
      <code>$requestTarget</code>
      <code>$uri</code>
    </MixedAssignment>
  </file>
  <file src="src/Request/Serializer.php">
    <MixedArgument>
      <code>$body</code>
      <code>$headers</code>
      <code>$method</code>
      <code>$requestTarget</code>
      <code>$version</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$request->getHeaders()]]></code>
    </MixedArgumentTypeCoercion>
  </file>
  <file src="src/Response.php">
    <MixedArgument>
      <code>static::MAX_STATUS_CODE_VALUE</code>
      <code>static::MIN_STATUS_CODE_VALUE</code>
    </MixedArgument>
  </file>
  <file src="src/Response/ArraySerializer.php">
    <MixedArgument>
      <code>$headers</code>
      <code>$protocolVersion</code>
      <code>$reasonPhrase</code>
      <code>$statusCode</code>
      <code>self::getValueFromKey($serializedResponse, 'body')</code>
    </MixedArgument>
    <MixedAssignment>
      <code>$headers</code>
      <code>$protocolVersion</code>
      <code>$reasonPhrase</code>
      <code>$statusCode</code>
    </MixedAssignment>
  </file>
  <file src="src/Response/EmptyResponse.php">
    <UnsafeInstantiation>
      <code>new static(204, $headers)</code>
    </UnsafeInstantiation>
  </file>
  <file src="src/Response/HtmlResponse.php">
    <DocblockTypeContradiction>
      <code>is_string($html)</code>
    </DocblockTypeContradiction>
  </file>
  <file src="src/Response/InjectContentTypeTrait.php">
    <MixedArgument>
      <code>$item</code>
    </MixedArgument>
    <MixedAssignment>
      <code>$hasContentType</code>
    </MixedAssignment>
  </file>
  <file src="src/Response/JsonResponse.php">
    <UnusedFunctionCall>
      <code>json_encode</code>
    </UnusedFunctionCall>
  </file>
  <file src="src/Response/RedirectResponse.php">
    <DocblockTypeContradiction>
      <code>gettype($uri)</code>
    </DocblockTypeContradiction>
    <RedundantConditionGivenDocblockType>
      <code>is_object($uri)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Response/Serializer.php">
    <MixedArgument>
      <code>$body</code>
      <code>$headers</code>
      <code>$reasonPhrase</code>
      <code>$status</code>
      <code>$version</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code><![CDATA[$response->getHeaders()]]></code>
    </MixedArgumentTypeCoercion>
    <RedundantCast>
      <code>(int) $status</code>
    </RedundantCast>
  </file>
  <file src="src/Response/TextResponse.php">
    <DocblockTypeContradiction>
      <code>is_string($text)</code>
    </DocblockTypeContradiction>
  </file>
  <file src="src/Response/XmlResponse.php">
    <DocblockTypeContradiction>
      <code>is_string($xml)</code>
    </DocblockTypeContradiction>
  </file>
  <file src="src/ServerRequest.php">
    <DocblockTypeContradiction>
      <code><![CDATA[! is_array($data) && ! is_object($data) && null !== $data]]></code>
    </DocblockTypeContradiction>
  </file>
  <file src="src/ServerRequestFactory.php">
    <MixedArgument>
      <code>$headers['cookie']</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code>$headers</code>
      <code>$server</code>
    </MixedArgumentTypeCoercion>
    <RedundantConditionGivenDocblockType>
      <code>is_callable(self::$apacheRequestHeaders)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/ServerRequestFilter/FilterUsingXForwardedHeaders.php">
    <ImpureMethodCall>
      <code>getHeaderLine</code>
      <code>getServerParams</code>
      <code>getUri</code>
      <code>withUri</code>
    </ImpureMethodCall>
    <LessSpecificReturnStatement>
      <code>$proxyCIDRList</code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code><![CDATA[list<non-empty-string>]]></code>
    </MoreSpecificReturnType>
  </file>
  <file src="src/ServerRequestFilter/IPRange.php">
    <UnusedConstructor>
      <code>__construct</code>
    </UnusedConstructor>
  </file>
  <file src="src/Stream.php">
    <PossiblyNullArgument>
      <code>$resource</code>
      <code><![CDATA[$this->resource]]></code>
      <code><![CDATA[$this->resource]]></code>
      <code><![CDATA[$this->resource]]></code>
    </PossiblyNullArgument>
    <PossiblyUnusedProperty>
      <code>$stream</code>
    </PossiblyUnusedProperty>
  </file>
  <file src="src/UploadedFile.php">
    <PossiblyNullArgument>
      <code><![CDATA[$this->file]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="src/Uri.php">
    <MixedArgument>
      <code>$key</code>
      <code>$key</code>
      <code>$matches[0]</code>
      <code>$value</code>
    </MixedArgument>
    <PossiblyNullOperand>
      <code><![CDATA[$this->port]]></code>
    </PossiblyNullOperand>
    <UndefinedAttributeClass>
      <code>SensitiveParameter</code>
    </UndefinedAttributeClass>
    <UnusedMethodCall>
      <code>parseUri</code>
    </UnusedMethodCall>
  </file>
  <file src="src/functions/create_uploaded_file.php">
    <MixedArgument>
      <code>$spec['error']</code>
      <code>$spec['name'] ?? null</code>
      <code>$spec['tmp_name']</code>
      <code>$spec['type'] ?? null</code>
    </MixedArgument>
  </file>
  <file src="src/functions/marshal_headers_from_sapi.php">
    <MixedAssignment>
      <code>$headers[$name]</code>
      <code>$headers[$name]</code>
      <code>$value</code>
    </MixedAssignment>
  </file>
  <file src="src/functions/marshal_method_from_sapi.php">
    <MixedInferredReturnType>
      <code>string</code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code>$server['REQUEST_METHOD'] ?? 'GET'</code>
      <code>$server['REQUEST_METHOD'] ?? 'GET'</code>
    </MixedReturnStatement>
  </file>
  <file src="src/functions/marshal_protocol_version_from_sapi.php">
    <MixedArgument>
      <code>$server['SERVER_PROTOCOL']</code>
    </MixedArgument>
  </file>
  <file src="src/functions/normalize_server.php">
    <MixedArrayAccess>
      <code>$apacheRequestHeaders['Authorization']</code>
      <code>$apacheRequestHeaders['authorization']</code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code>$apacheRequestHeaders</code>
      <code>$server['HTTP_AUTHORIZATION']</code>
      <code>$server['HTTP_AUTHORIZATION']</code>
    </MixedAssignment>
  </file>
  <file src="src/functions/normalize_uploaded_files.php">
    <InvalidReturnStatement>
      <code>$normalized</code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code>UploadedFileInterface[]</code>
    </InvalidReturnType>
    <MixedAssignment>
      <code>$normalized[$key]</code>
      <code>$value</code>
      <code>$value</code>
    </MixedAssignment>
    <MixedFunctionCall>
      <code>$recursiveNormalize(
                    $tmpNameTree[$key],
                    $sizeTree[$key],
                    $errorTree[$key],
                    $nameTree[$key] ?? null,
                    $typeTree[$key] ?? null
                )</code>
      <code>$recursiveNormalize(
            $files['tmp_name'],
            $files['size'],
            $files['error'],
            $files['name'] ?? null,
            $files['type'] ?? null
        )</code>
    </MixedFunctionCall>
    <MixedInferredReturnType>
      <code>array</code>
    </MixedInferredReturnType>
    <MixedReturnStatement>
      <code>$recursiveNormalize(
            $files['tmp_name'],
            $files['size'],
            $files['error'],
            $files['name'] ?? null,
            $files['type'] ?? null
        )</code>
    </MixedReturnStatement>
  </file>
  <file src="src/functions/parse_cookie_header.php">
    <LessSpecificReturnStatement>
      <code>$cookies</code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code><![CDATA[array<non-empty-string, string>]]></code>
    </MoreSpecificReturnType>
  </file>
  <file src="test/CallbackStreamTest.php">
    <MixedAssignment>
      <code>$ret</code>
      <code>$ret</code>
    </MixedAssignment>
  </file>
  <file src="test/MessageTraitTest.php">
    <MixedArgument>
      <code>$value</code>
    </MixedArgument>
  </file>
  <file src="test/RelativeStreamTest.php">
    <DocblockTypeContradiction>
      <code>assertSame</code>
    </DocblockTypeContradiction>
  </file>
  <file src="test/Request/SerializerTest.php">
    <MissingClosureReturnType>
      <code>static function () use ($payload) {</code>
    </MissingClosureReturnType>
    <MixedArrayOffset>
      <code>$payload[$i++]</code>
    </MixedArrayOffset>
    <MixedAssignment>
      <code>$i</code>
    </MixedAssignment>
    <MixedOperand>
      <code>$i</code>
    </MixedOperand>
  </file>
  <file src="test/RequestTest.php">
    <MixedArgument>
      <code>$headers</code>
    </MixedArgument>
  </file>
  <file src="test/ResponseTest.php">
    <MixedArgumentTypeCoercion>
      <code>$record</code>
      <code>$record</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code>$responseCode</code>
    </MixedAssignment>
    <StringIncrement>
      <code>$value</code>
    </StringIncrement>
  </file>
  <file src="test/ServerRequestFactoryTest.php">
    <InvalidArgument>
      <code>$normalizedFiles['fooFiles']</code>
    </InvalidArgument>
  </file>
  <file src="test/ServerRequestTest.php">
    <InvalidArgument>
      <code>$parsedBody</code>
    </InvalidArgument>
  </file>
  <file src="test/StaticAnalysis/RequestInterfaceStaticReturnTypes.php">
    <UnusedClass>
      <code>RequestInterfaceStaticReturnTypes</code>
    </UnusedClass>
  </file>
  <file src="test/StreamTest.php">
    <DeprecatedMethod>
      <code>setMethods</code>
    </DeprecatedMethod>
  </file>
  <file src="test/TestAsset/CallbacksForCallbackStreamTest.php">
    <PossiblyUnusedMethod>
      <code>sampleCallback</code>
      <code>sampleStaticCallback</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="test/TestAsset/HeaderStack.php">
    <UnusedClass>
      <code>HeaderStack</code>
    </UnusedClass>
  </file>
  <file src="test/UploadedFileTest.php">
    <MixedArgument>
      <code>$path</code>
      <code>$streamOrFile</code>
    </MixedArgument>
  </file>
  <file src="test/UriTest.php">
    <MixedArgument>
      <code>$test</code>
    </MixedArgument>
    <MixedAssignment>
      <code>$test</code>
    </MixedAssignment>
    <PossiblyUnusedParam>
      <code>$query</code>
    </PossiblyUnusedParam>
  </file>
  <file src="test/functions/NormalizeUploadedFilesTest.php">
    <MixedArgument>
      <code>$normalised['my-form']['details']['avatars']</code>
      <code>$normalised['slide-shows'][0]['slides']</code>
    </MixedArgument>
    <MixedArrayAccess>
      <code>$normalised['my-form']['details']['avatar']</code>
      <code>$normalised['my-form']['details']['avatars']</code>
      <code>$normalised['my-form']['details']['avatars']</code>
      <code>$normalised['my-form']['details']['avatars']</code>
      <code>$normalised['my-form']['details']['avatars']</code>
      <code>$normalised['my-form']['details']['avatars'][0]</code>
      <code>$normalised['my-form']['details']['avatars'][1]</code>
      <code>$normalised['my-form']['details']['avatars'][2]</code>
      <code>$normalised['slide-shows'][0]['slides']</code>
      <code>$normalised['slide-shows'][0]['slides']</code>
      <code>$normalised['slide-shows'][0]['slides']</code>
      <code>$normalised['slide-shows'][0]['slides'][0]</code>
      <code>$normalised['slide-shows'][0]['slides'][1]</code>
    </MixedArrayAccess>
    <MixedMethodCall>
      <code>getClientFilename</code>
      <code>getClientFilename</code>
      <code>getClientFilename</code>
      <code>getClientFilename</code>
      <code>getClientFilename</code>
      <code>getClientFilename</code>
    </MixedMethodCall>
    <UndefinedInterfaceMethod>
      <code>$normalised['my-form']</code>
      <code>$normalised['my-form']</code>
      <code>$normalised['my-form']</code>
      <code>$normalised['my-form']</code>
      <code>$normalised['my-form']</code>
      <code>$normalised['slide-shows']</code>
      <code>$normalised['slide-shows']</code>
      <code>$normalised['slide-shows']</code>
    </UndefinedInterfaceMethod>
  </file>
</files>
